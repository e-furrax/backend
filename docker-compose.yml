version: '3'
services:
    postgres:
        image: postgres:10
        restart: always
        container_name: postgres_container
        ports:
            - '5432:5432'
        environment:
            - POSTGRES_DB=furrax
            - POSTGRES_USER=furrax
            - POSTGRES_PASSWORD=furrax
        volumes:
            - postgres:/var/lib/postgresql/data
        networks:
            - app-network
    node:
        image: 'node:12'
        working_dir: /home/node/app
        restart: unless-stopped
        environment:
            - NODE_ENV=development
        volumes:
            - ./:/home/node/app
        ports:
            - '3000:3000'
            - '4000:4000'
        command: 'npm run dev'
        depends_on:
            - postgres
            - mongo
            - redis
        networks:
            - app-network

    mongo:
        container_name: mongo_container
        image: mongo:4.4.4
        restart: unless-stopped
        ports:
            - '27017:27017'
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin-furrax
            MONGO_INITDB_ROOT_PASSWORD: admin-furrax
            MONGO_INITDB_DATABASE: furrax
        volumes:
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        networks:
            - app-network

    redis:
        container_name: redis_container
        command: redis-server
        image: redis:alpine
        ports:
            - '6379:6379'
        networks:
            - app-network

volumes:
    postgres:

networks:
    app-network:
        driver: bridge
